version: '3.7'

services:

  # The 'setup' service runs a one-off script which initializes the
  # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
  # values of the passwords defined in the '.env' file.
  #
  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  setup:
    build:
      context: setup/
      args:
        ELASTIC_SEARCH_KIBANA_VERSION: ${ELASTIC_SEARCH_KIBANA_VERSION}
    init: true
    volumes:
      - setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_SEARCH_KIBANA_VERSION: ${ELASTIC_SEARCH_KIBANA_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xmx2g -Xms2g
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        LOGSTASH_FILEBEAT_VERSION: ${LOGSTASH_FILEBEAT_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5044:5044"
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: -Xmx1g -Xms1g
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_SEARCH_KIBANA_VERSION: ${ELASTIC_SEARCH_KIBANA_VERSION}
    volumes:
    # Z: 다른 container에 공유한다는 옵션
    # ro : read-only
    # rw : read-write
    # WSL 가서 보면 있습니다.
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      NODE_OPTIONS: "--max-old-space-size=2048"
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch
  filebeat:
    build:
      context: filebeat/
      args:
        LOGSTASH_FILEBEAT_VERSION: ${LOGSTASH_FILEBEAT_VERSION}
    # windows DACL
    entrypoint: "filebeat -e -strict.perms=false"
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:rw,Z
      - filebeat:/usr/share/filebeat
      - application:/usr/share/application:rw,Z
      - nginxLog:/var/log/nginx:rw,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks: 
      - elk
    depends_on:
      - logstash
  application:
    build:
      context: application/
    volumes:
      - application:/usr/share/application:rw,Z
    expose:
      - "8080"
    networks:
      - elk
    depends_on:
      - nginx
      - filebeat
  nginx:
    build:
      context: nginx/
    volumes:
      - nginx:/usr/share/nginx:rw,Z
      - nginxLog:/var/log/nginx:rw,Z
      - ./nginx/static:/usr/share/nginx/html
      - ./nginx/conf:/etc/nginx/
    ports:
      - "80:80"
    networks:
      - elk
networks:
  elk:
    driver: bridge

volumes:
  setup:
  elasticsearch:
  application:
  filebeat:
  nginx:
  nginxLog: